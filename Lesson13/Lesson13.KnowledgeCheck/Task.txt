1. Application Configuration
	Use the built-in configuration system in ASP.NET Core to configure the database connection string and other application settings.
	Store configuration values in a JSON file, environment variables, or other sources.
	Set a default Home page to Product (Index)

2. Dependency Injection
	Use dependency injection to manage the application's services and components.
	Register services with the built-in DI container and resolve them in controllers and other components.
	Use constructor injection to inject services into controllers and other components.

3. Working with Database
	Use Entity Framework Core to create and manage a database of products.
	Implement a repository pattern to abstract away data access logic and improve testability.
	Use LINQ to query and manipulate data in the database.
	
Extra task:
    Implement a product details View (that shows additional info about the product) and Action in the controller


Connection String: "Data Source=ProductsDB.db"